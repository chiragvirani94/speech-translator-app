name: Build Android APK (Buildozer - setup-android)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      PATH: ${{ github.workspace }}/android-sdk/platform-tools:${{ github.workspace }}/.local/bin:$PATH

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install apt packages (including tar)
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
            git python3-pip python3-setuptools python3-venv unzip zip wget tar \
            build-essential libncurses5 libncurses5-dev libffi-dev libssl-dev \
            libsqlite3-dev liblzma-dev libbz2-dev

      - name: Setup Android SDK / Build Tools / NDK
        uses: r0adkll/setup-android@v2
        with:
          api-levels: '33'
          build-tools: '33.0.2'
          ndk: '25.2.9519653'
          components: 'platform-tools'

      - name: Install pip tools
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade cython buildozer

      - name: Show versions (debug)
        run: |
          java -version || true
          python3 --version
          pip show buildozer || true

      - name: Run Buildozer (debug)
        run: |
          ls -la
          buildozer android debug
        timeout-minutes: 120

      - name: Collect APK artifact
        run: |
          mkdir -p apk_out
          if [ -d "bin" ]; then cp -v bin/*.apk apk_out/ || true; fi
          if [ -d "buildozer/bin" ]; then cp -v buildozer/bin/*.apk apk_out/ || true; fi
          ls -la apk_out || true

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: SpeechTranslator-APK
          path: apk_out/*.apk
